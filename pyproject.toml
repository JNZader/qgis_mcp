[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qgis-mcp-secure"
version = "2.0.0"
description = "Secure Model Context Protocol client for QGIS with enterprise-grade security"
readme = "SECURITY_IMPLEMENTATION.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "QGIS MCP Team"}
]
keywords = ["qgis", "gis", "mcp", "secure", "client", "server", "cryptography"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Security :: Cryptography",
]

dependencies = [
    "msgpack==1.0.7",
    "jsonschema==4.20.0",
    "cryptography==41.0.7",
    "pyOpenSSL==23.3.0",
    "keyring==24.3.0",
    "certifi==2023.11.17",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.21.1",
    "pytest-timeout==2.2.0",
    "pytest-mock==3.12.0",
    "black==23.12.1",
    "flake8==6.1.0",
    "mypy==1.7.1",
]

[project.urls]
Homepage = "https://github.com/JNZader/qgis_mcp"
Documentation = "https://github.com/JNZader/qgis_mcp/blob/main/SECURITY_IMPLEMENTATION.md"
Repository = "https://github.com/JNZader/qgis_mcp"
Issues = "https://github.com/JNZader/qgis_mcp/issues"

[project.scripts]
qgis-mcp-client = "qgis_mcp.qgis_mcp_client_secure:main"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
  | qgis_mcp_plugin
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/qgis_mcp_plugin/*", "*/build/*", "*/dist/*"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security-related",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["qgis_mcp_plugin"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "qgis_mcp_plugin"]
skips = ["B101", "B601"]  # Skip assert_used and shell_execution warnings in tests

# Flake8 configuration (in setup.cfg format, as flake8 doesn't support pyproject.toml yet)
# See .flake8 file

# Pylint configuration
[tool.pylint.master]
ignore = ["tests", "qgis_mcp_plugin"]
jobs = 0
persistent = true
suggestion-mode = true
unsafe-load-any-extension = false

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-bool-expr = 5
max-branches = 15
max-locals = 20
max-parents = 7
max-public-methods = 25
max-returns = 6
max-statements = 60
